FROM node:8 as target

#RUN apt-get update && apt-get upgrade -y && apt-get install -y gnupg wget nodejs npm

ARG REACT_APP_QUANDL_KEY
ENV REACT_APP_QUANDL_KEY ${REACT_APP_QUANDL_KEY}
ARG REACT_APP_WEB_SERVER
ENV REACT_APP_WEB_SERVER ${REACT_APP_WEB_SERVER}

ADD server /app/server
ADD public /app/public
ADD Procfile /app/Procfile
ADD package-lock.json /app/
ADD package.json /app/
ADD config /app/config
ADD src /app/src
ADD scripts /app/scripts
#ADD node_modules /app/node_modules
WORKDIR /app

RUN mkdir -p /app/node_modules && npm install

ENV PATH /app/node_modules/.bin:$PATH

EXPOSE 3000
CMD ["npm", "start"]

FROM centos:7 as df-runtime

RUN yum -y update; yum -y install curl
RUN cd /etc/yum.repos.d && curl -LO https://repo.deepfactor.io/repo/yum/deepfactor.repo
RUN rpm --import https://repo.deepfactor.io/repo/yum/keys/D5DC8225.asc
RUN yum -y install deepfactor-runtime-1.0-459

ARG DF_APP_NAME
ARG DF_COMPONENT
ARG DF_API_TOKEN

# option: pass via build ARG or set here
ENV DF_APP "${DF_APP_NAME}"
ENV DF_COMPONENT "${DF_COMPONENT}"
ENV DF_API_TOKEN "${DF_API_TOKEN}"

RUN echo "Building the DF name ${DF_APP_NAME}}"
RUN echo "Building the DF component ${DF_COMPONENT}"
RUN echo "API TOKEN: ${DF_API_TOKEN}"

# If necessary, add --add-host=my-df-portal:10.0.0.1 to your image build AND run commands for DF portal DNS:
RUN dfctl register -a "$DF_APP" -c "$DF_COMPONENT" -o /usr/lib/libdf.so -v
# option: dfctl register/create individual components in container

# Warning: The above df-runtime container's built libdf.so install must match
#  the version of the target container's libc.so.
#  i.e. APP_IMAGE must contain a glibc >= 2.17
FROM target
COPY --from=df-runtime /usr/lib/libdf.so /usr/lib/libdf.so


# The following is an optional smoke test for redhat and debian distro types.
RUN env LD_PRELOAD=/usr/lib/libdf.so sh -c 'rpm -q glibc || dpkg -l libc6' || \
    (echo -e "\n\n\nError, DeepFactor dependency not met.\n\n\n/tmp/deepfactor.log:\n" \
    && cat /tmp/deepfactor.log && false)

# option: set LD_PRELOAD in app startup cmd or script
ENV LD_PRELOAD=/usr/lib/libdf.so
